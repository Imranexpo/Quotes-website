generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model student {
  id    Int     @id @default(autoincrement())
  name  String? @db.VarChar(20)
  email String  @db.VarChar(255)
}

model users {
  id                  Int                   @id @default(autoincrement())
  username            String                @db.VarChar(255)
  email               String                @unique(map: "email") @db.VarChar(255)
  password            String                @db.VarChar(255)
  created_at          DateTime?             @default(now()) @db.Timestamp(0)
  updated_at          DateTime?             @default(now()) @db.Timestamp(0)
  main_table_data     main_table_data[]
  quotes_columns_data quotes_columns_data[]
  user_topics         user_topics[]
}

model user_topics {
  id         Int       @id @default(autoincrement())
  user_id    Int
  topic      String    @db.VarChar(255)
  name       String    @db.VarChar(600)
  order_id   Int
  status     Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_topics_ibfk_1")

  @@index([user_id], map: "user_id")
}

model main_table_data {
  id           Int       @id @default(autoincrement())
  topic_id     Int
  user_id      Int
  quotes_title String?   @db.VarChar(255)
  header_title String?   @db.VarChar(255)
  quotes       String?   @db.VarChar(1000)
  author_name  String?   @db.VarChar(255)
  status       Int
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)
  users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "main_table_data_ibfk_1")

  @@index([user_id], map: "user_id")
}

model quotes_columns_data {
  id                Int       @id @default(autoincrement())
  user_id           Int
  Topic_id          Int
  name              String    @db.VarChar(255)
  filter_status_id  Int
  sorting_status_id Int
  order_id          Int
  filter_status     String    @db.VarChar(255)
  sorting_status    String    @db.VarChar(255)
  column_status     Int
  status            Int
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  updated_at        DateTime? @default(now()) @db.Timestamp(0)
  users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "quotes_columns_data_ibfk_1")

  @@index([user_id], map: "user_id")
}
